<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trang ch·ªß</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <style>
        body { display: flex; }
        .sidebar { width: 250px; background: #0d6efd; color: white; min-height: 100vh; padding: 15px; }
        .sidebar a { color: white; text-decoration: none; display: block; padding: 10px; }
        .sidebar a:hover { background: #084298; }
        .content { flex-grow: 1; padding: 20px; }
        .filter-panel { width: 250px; padding: 20px; background: #f8f9fa; }
        .status-badge { padding: 5px 10px; border-radius: 5px; color: white; }
    </style>
</head>
<body>
    <style>
        .loading-overlay { position: fixed; inset: 0; background: rgba(255,255,255,0.6); display: none; align-items: center; justify-content: center; z-index: 2000; }
    </style>
    <div id="loadingOverlay" class="loading-overlay">
        <div class="spinner-border text-primary" role="status"></div>
    </div>
    <script>
    function showLoading(){
        var o = document.getElementById('loadingOverlay');
        if(o) o.style.display = 'flex';
    }
    function hideLoading(){
        var o = document.getElementById('loadingOverlay');
        if(o) o.style.display = 'none';
    }
    </script>
    <div class="sidebar">
        <h4>
            <a href="/users/Profile" class="text-white text-decoration-none">
                <%= user.name %>
            </a>
        </h4>        
        <a href="/">Trang ch·ªß</a>
        <a href="#">Th√¥ng b√°o</a>
        <a href="/Thanhvien">Th√†nh vi√™n nh√≥m</a>
        <a href="/Quytrinh">Quy tr√¨nh</a>
        <a href="#">C√†i ƒë·∫∑t</a>
    </div>
    
    <div class="content">
        <div class="d-flex justify-content-between align-items-center mb-2">
            <h2 class="mb-0">Danh s√°ch ThaÃÄnh vi√™n</h2>
            <div class="d-flex gap-2">
                <a class="btn btn-outline-secondary" href="/Thanhvien/bulk-template">T·∫£i file m·∫´u</a>
                <button class="btn btn-outline-success" data-bs-toggle="modal" data-bs-target="#bulkImportModal">Nh·∫≠p t·ª´ Excel</button>
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProcessModal">+ Th√™m thaÃÄnh vi√™n</button>
            </div>
        </div>
        <form method="get" class="row g-2 mb-3">
            <div class="col-sm-6 col-md-5 col-lg-4">
                <input type="text" class="form-control" name="q" placeholder="T√¨m theo t√™n ho·∫∑c email" value="<%= typeof q !== 'undefined' ? q : '' %>">
            </div>
            <div class="col-sm-4 col-md-3 col-lg-3">
                <select class="form-select" name="group" onchange="this.form.submit()">
                    <option value="all" <%= (selectedGroup === 'all') ? 'selected' : '' %>>T·∫•t c·∫£ nh√≥m</option>
                    <% if (typeof groups !== 'undefined' && groups && groups.length) { %>
                        <% groups.forEach(function(g) { %>
                            <option value="<%= g %>" <%= (selectedGroup === g) ? 'selected' : '' %>><%= g %></option>
                        <% }) %>
                    <% } %>
                </select>
            </div>
            <div class="col-sm-2 col-md-2 col-lg-2">
                <button type="submit" class="btn btn-outline-primary w-100">T√¨m ki·∫øm</button>
            </div>
            <div class="col-sm-12 col-md-2 col-lg-2">
                <a href="/Thanhvien" class="btn btn-outline-secondary w-100">X√≥a l·ªçc</a>
            </div>
        </form>

        <% if (thanhvien.length > 0) { %>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>T√™n</th>
                        <th>Email</th>
                        <th>SƒêT</th>
                        <th>Nh√≥m</th>
                        <th>Ng∆∞·ªùi qu·∫£n l√Ω</th>
                        <th>Th∆°ÃÄi gian taÃ£o</th>
                        <th>Thao t√°c</th>
                    </tr>
                </thead>
                <tbody>
                    <% thanhvien.forEach((thanhvien, index) => { %>
                        <tr>
                            <td><%= index + 1 %></td>
                            <td><%= thanhvien.name %></td>
                            <td><%= thanhvien.email %></td>
                            <td><%= thanhvien.phone %></td>
                            <td><%= thanhvien.group %></td>
                            <td><%= user.name %></td>
                            <td><%= new Date(thanhvien.createdAt).toLocaleString('vi-VN') %></td>
                            <td>                            
                                <button class="btn btn-warning btn-sm" onclick="editThanhVien('<%= thanhvien._id %>')">
                                    ‚úè S·ª≠a
                                </button>
                                <button class="btn btn-danger btn-sm" onclick="deleteThanhVien('<%= thanhvien._id %>')">
                                    üóë X√≥a
                                </button>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        <% } else { %>
            <p class="text-muted">Ch∆∞a c√≥ thaÃÄnh vi√™n n√†o.</p>
        <% } %>
        
    </div>
        
<!-- Modal nh·∫≠p th√™m nh√¢n vi√™n-->
<div class="modal fade" id="addProcessModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Th√™m ThaÃÄnh vi√™n M·ªõi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="thanhvienForm">
                    <div class="mb-3">
                        <label for="name" class="form-label">T√™n</label>
                        <input type="text" class="form-control" id="name" required>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="text" class="form-control" id="email" required>
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">M√¢Ã£t kh√¢Ãâu</label>
                        <input type="text" class="form-control" id="password" required>
                    </div>
                    <div class="mb-3">
                        <label for="manager" class="form-label">Ng∆∞·ªùi qu·∫£n l√Ω</label>
                        <input type="text" class="form-control" id="manager" data="<%= user._id %>" value="<%= user.email%>" disabled>
                    </div>
                    <div class="mb-3">
                        <label for="group" class="form-label">Nh√≥m</label>
                        <input type="text" class="form-control" id="group" required>
                    </div>
                    <div>
                        <div class="form-check mb-3">
                            <label class="form-check-label">
                             Email s·∫Ω ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông cho nh√¢n vi√™n
                            </label>
                          </div>                          
                    </div>
                    <button type="submit" class="btn btn-success">L∆∞u</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal bulk import -->
<div class="modal fade" id="bulkImportModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Nh·∫≠p nh√¢n vi√™n t·ª´ Excel/CSV</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="bulkImportForm">
                    <div class="mb-3">
                        <label class="form-label">Ch·ªçn file (.xlsx/.csv)</label>
                        <input type="file" id="bulkFile" accept=".xlsx,.csv" class="form-control" required>
                    </div>
                    <div class="alert alert-info">
                        File ph·∫£i c√≥ c√°c c·ªôt: <code>name</code>, <code>email</code>, <code>password</code>, <code>group</code>.
                        N·∫øu <code>password</code> tr·ªëng, h·ªá th·ªëng s·∫Ω t·ª± sinh m·∫≠t kh·∫©u.
                    </div>
                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="sendEmail">
                        <label class="form-check-label" for="sendEmail">G·ª≠i email th√¥ng tin t√†i kho·∫£n cho nh√¢n vi√™n</label>
                    </div>
                    <button type="submit" class="btn btn-success">Nh·∫≠p</button>
                </form>
                <hr/>
                <div id="bulkResult" class="d-none">
                    <h6>K·∫øt qu·∫£</h6>
                    <div id="bulkSummary" class="mb-2"></div>
                    <pre id="bulkErrors" class="bg-light p-2" style="max-height:200px; overflow:auto"></pre>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal ch·ªânh s·ª≠a nh√¢n vi√™n -->
<div class="modal fade" id="editThanhVienModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Ch·ªânh s·ª≠a Nh√¢n vi√™n</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editThanhVienForm">
                    <input type="hidden" id="edit_id">
                    <div class="mb-3">
                        <label class="form-label">T√™n</label>
                        <input type="text" class="form-control" id="edit_name" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="text" class="form-control" id="edit_email" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">NhoÃÅm</label>
                        <input type="text" class="form-control" id="edit_group" required>
                    </div>
                    <button type="submit" class="btn btn-success">C·∫≠p nh·∫≠t</button>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
document.getElementById("thanhvienForm").addEventListener("submit", async function (e) {
    e.preventDefault();
    showLoading();
    const thanhvienData = {
        name: document.getElementById("name").value,
        email: document.getElementById("email").value,
        password: document.getElementById("password").value,
        manager: document.getElementById("manager").getAttribute("data"),
        group: document.getElementById("group").value,
    };
    try{
        const response = await fetch("/Thanhvien/create", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(thanhvienData)
        });
        if (response.ok) {
            alert("Th√™m thaÃÄnh vi√™n th√†nh c√¥ng!");
            window.location.reload();
        } else {
            alert("C√≥ l·ªói x·∫£y ra!");
        }
    } finally {
        hideLoading();
    }
});
</script>

<script>
    async function editThanhVien(id) {
        showLoading();
        const response = await fetch(`/Thanhvien/${id}`);
        const thanhvien = await response.json();
    
        document.getElementById("edit_id").value = thanhvien._id;
        document.getElementById("edit_name").value = thanhvien.name;
        document.getElementById("edit_group").value = thanhvien.group;
        document.getElementById("edit_email").value = thanhvien.email;
    
        new bootstrap.Modal(document.getElementById('editThanhVienModal')).show();
        hideLoading();
    }
    
    document.getElementById("editThanhVienForm").addEventListener("submit", async function (e) {
        e.preventDefault();
        showLoading();
        const id = document.getElementById("edit_id").value;
        const thanhvienData = {
            name: document.getElementById("edit_name").value,
            email: document.getElementById("edit_email").value,
            group: document.getElementById("edit_group").value,
        };
        try{
            const response = await fetch(`/Thanhvien/update/${id}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(thanhvienData)
            });
            if (response.ok) {
                alert("C·∫≠p nh·∫≠t th√†nh c√¥ng!");
                window.location.reload();
            } else {
                alert("C√≥ l·ªói x·∫£y ra!");
            }
        } finally {
            hideLoading();
        }
    });
    </script>
    
    <script>
        async function deleteThanhVien(id) {
            if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a nh√¢n vi√™n n√†y?")) {
                showLoading();
                try{
                    const response = await fetch(`/Thanhvien/delete/${id}`, { method: "DELETE" });
                    if (response.ok) {
                        alert("X√≥a th√†nh c√¥ng!");
                        window.location.reload();
                    } else {
                        alert("C√≥ l·ªói x·∫£y ra!");
                    }
                } finally {
                    hideLoading();
                }
            }
        }
        </script>

<script>
// Bulk import handler for Manager
document.getElementById('bulkImportForm')?.addEventListener('submit', async function(e){
    e.preventDefault();
    // Cho overlay xu·∫•t hi·ªán ngay tr∆∞·ªõc khi g·ª≠i request (ƒë·∫£m b·∫£o v·∫Ω frame)
    showLoading();
    await new Promise(r => setTimeout(r, 0));
    const file = document.getElementById('bulkFile').files[0];
    if(!file){
        alert('Vui l√≤ng ch·ªçn file');
        hideLoading();
        return;
    }
    const formData = new FormData();
    formData.append('file', file);
    formData.append('sendEmail', document.getElementById('sendEmail').checked);
    const res = await fetch('/Thanhvien/bulk-import', { method: 'POST', body: formData });
    const result = await res.json();
    const resultBox = document.getElementById('bulkResult');
    const summary = document.getElementById('bulkSummary');
    const errorsBox = document.getElementById('bulkErrors');
    resultBox.classList.remove('d-none');
    if(res.ok){
        summary.innerText = `T·ªïng: ${result.summary.totalRows} | T·∫°o th√†nh c√¥ng: ${result.summary.createdCount} | L·ªói: ${result.summary.errorCount}`;
        errorsBox.innerText = (result.errors || []).map(e => `D√≤ng ${e.row}: ${e.error}`).join('\n') || 'Kh√¥ng c√≥ l·ªói';
        if (result.summary && Number(result.summary.errorCount) === 0) {
            const modalEl = document.getElementById('bulkImportModal');
            const modal = bootstrap.Modal.getInstance(modalEl) || new bootstrap.Modal(modalEl);
            modal.hide();
            window.location.reload();
        }
    } else {
        summary.innerText = 'C√≥ l·ªói x·∫£y ra';
        errorsBox.innerText = result.error || 'L·ªói kh√¥ng x√°c ƒë·ªãnh';
    }
    hideLoading();
});
        </script>
<script>
function showLoading(){
    const o = document.getElementById('loadingOverlay');
    if(o) o.style.display = 'flex';
}
function hideLoading(){
    const o = document.getElementById('loadingOverlay');
    if(o) o.style.display = 'none';
}
</script>

            
        

</body>
</html>
